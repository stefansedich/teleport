# Teleport License Usage
license:
  ## Set false to run Teleport in Community edition mode
  enabled: true
  secretName: license
  mountPath: /var/lib/license

# Docker image to use
image:
  # Used if license is enabled
  enterpriseRepository: quay.io/gravitational/teleport-ent
  # Used if license is disabled
  communityRepository: quay.io/gravitational/teleport
  # Version of Teleport
  tag: "6"
  pullPolicy: IfNotPresent
  # Optionally specify an array of imagePullSecrets.
  # Secrets must be manually created in the namespace.
  # ref: https://kubernetes.io/docs/concepts/containers/images/#specifying-imagepullsecrets-on-a-pod
  pullSecrets:
  # - name: myRegistryKeySecretName

labels: {}

# Teleport Proxy configuration
proxy:
  tls:
    # We assume that Teleport will handle TLS termination by default
    enabled: true
    # Set this to false if you want to use Teleport's generated self-signed certificates
    usetlssecret: true
    # tweak this if you have multiple proxies in a single namespace
    secretName: tls-web

# Teleport configuration
# See the admin guide for full details
# https://gravitational.com/teleport/docs/admin-guide/#configuration-file
#
# The following variables and parts are included in the templates/config.yaml for the teleport proxy/auth
# configuration
#
config:
  # used for cluster name, advertise_ip, and public addresses
  # If High Availability is set it is only used for the proxy
  public_address: teleport.example.com
  #used for listen addreses in proxy, auth and ssh
  listen_addr: 0.0.0.0

  # Set to true to have separate proxy and auth instances for High Availability.
  # You must use non-dir storage for High Availability or you can only have 1 auth instance.
  highAvailability: false
  # High Availability configuration with proxy and auth servers. No configured SSH service.
  proxyCount: 2
  authCount: 2
  auth_public_address: auth.example.com
  authService:
    type: ClusterIP
    labels: {}
    annotations: {}
    externalTrafficPolicy: ""
    loadBalancerSourceRanges: []

# Set for proxies in High Availability, single proxy and ssh service only deployments
# auth_service_connection:
#   auth_token: dogs-are-much-nicer-than-cats
#   auth_servers:
#   - teleportauth:3025
#   - auth.example.com:3025

  teleport:
    pid_file: /var/run/teleport.pid
    log:
      output: stderr
      severity: INFO
    data_dir: /var/lib/teleport
    storage:
      type: dir

    # Teleport throttles all connections to avoid abuse. These settings allow
    # you to adjust the default limits
    connection_limits:
      max_connections: 1000
      max_users: 250

    auth_service:
      enabled: yes
      license_file: /var/lib/license/license-enterprise.pem
      authentication:
        type: local

      # We recommend to use tools like `pwgen` to generate sufficiently random
      # tokens of 32+ byte length.
      tokens:
      - proxy,node,kube:dogs-are-much-nicer-than-cats
      - trusted_cluster:trains-are-superior-to-cars

      # Determines if SSH sessions to cluster nodes are forcefully terminated
      # after no activity from a client (idle client).
      # Examples: "30m", "1h" or "1h30m"
      client_idle_timeout: never

      # Determines if the clients will be forcefully disconnected when their
      # certificates expire in the middle of an active SSH session. (default is 'no')
      disconnect_expired_cert: no

      # Determines the interval at which Teleport will send keep-alive messages.
      # keep_alive_count_max is the number of missed keep-alive messages before
      # the server tears down the connection to the client.
      keep_alive_interval: 5m
      keep_alive_count_max: 3

      # Optional Session control timeout
      # session_control_timeout: 2m # default

      # Optional setting for configuring session recording. Possible values are:
      #     "node"  : sessions will be recorded on the node level (the default)
      #     "proxy" : recording on the proxy level, see "recording proxy mode" section.
      #     "off"   : session recording is turned off
      #     "node-sync" : sessions recording will be streamed from node -> auth -> storage
      #     "proxy-sync : sessions recording will be streamed from proxy -> auth -> storage
      #
      # session_recording: "node-sync"

    ssh_service:
      enabled: yes
      public_addr: 127.0.0.1
      commands:
      - command:
        - uptime
        - -p
        name: uptime
        period: 30m
      labels:
        type: auth

      enhanced_recording:
        # Enable or disable enhanced auditing for this node. Default value:
        # false.  See
        enabled: false

        # command_buffer_size is optional with a default value of 8 pages.
        command_buffer_size: 8

        # disk_buffer_size is optional with default value of 128 pages.
        disk_buffer_size: 128

        # network_buffer_size is optional with default value of 8 pages.
        network_buffer_size: 8

        # Controls where cgroupv2 hierarchy is mounted. Default value:
        # /cgroup2.
        cgroup_path: /cgroup2

      # Configures PAM integration. Note that additional volumes of the PAM configuration
      # will be required.
      pam:
        enabled: no
        service_name: teleport

    proxy_service:
      enabled: yes
      # Used if  proxy.tls.usetlssecret is set to true, otherwise the values are not included in teleport.yaml
      https_key_file: /var/lib/certs/tls.key
      https_cert_file: /var/lib/certs/tls.crt
      # Specify a different hostname for the ssh and tunnel public address (if different to config.public_address)
      # ssh_public_addr: teleportssh.example.com
      # tunnel_public_addr: teleporttunnel.example.com

      # kubernetes section configures kubernetes proxy protocol support
      kubernetes:
        enabled: yes
        # Specify a different hostname for the k8s public address (if different to config.public_address)
        # public_addr: teleportkubernetes.example.com

      # TLS certificates for the HTTPS connection.
      # https_keypairs:
      # - key_file: /var/lib/teleport/webproxy_key.pem
      #  cert_file: /var/lib/teleport/webproxy_cert.pem

    # To use a kubernetes_service uncomment this section
    # kubernetes_service:
      # enabled: true
      # labels:
      #   example-label: example-value
      # listen_addr: 0.0.0.0:3027
      # Optionally use a volume mounted kubeconfig to connect to other clusters
      # kubeconfig_file: /var/lib/teleport/kubefiles/kubeconfig


# Alternatively you can provide your teleport configuration under teleportConfig with static text. No variable substitution.
otherConfig:
  useOtherConfig: false
  teleportConfig:
    # place a full teleport.yaml configuration here

# Teleport configuration for High Availability deployment
otherConfigHA:
  useOtherConfig: false
  teleportConfig:
    # place a full teleport.yaml configuration here

service:
  type: ClusterIP
  ports:
    proxyweb:
      port: 3080
      targetPort: 3080
      protocol: TCP
    authssh:
      port: 3025
      targetPort: 3025
      protocol: TCP
    proxykube:
      port: 3026
      targetPort: 3026
      protocol: TCP
    proxyssh:
      port: 3023
      targetPort: 3023
      protocol: TCP
    proxytunnel:
      port: 3024
      targetPort: 3024
      protocol: TCP
  annotations: {}
  ## Ref: https://kubernetes.io/docs/tutorials/services/source-ip/#source-ip-for-services-with-typeloadbalancer
  externalTrafficPolicy: ""
  loadBalancerSourceRanges: []

  ## See https://github.com/kubernetes-incubator/external-dns/blob/master/docs/tutorials/aws-sd.md#verify-that-externaldns-works-service-example
  # Set something like the below in order to instruct external-dns to create a Route53 record set for your ELB on AWS:
  # external-dns.alpha.kubernetes.io/hostname: teleport.my-org.com

# Use ingress in addition to service to terminate TLS outside of Teleport while using external-dns
# You can safely use `service` only and disable `ingress`, when you just want to terminate TLS outside of Teleport
ingress:
  enabled: false
  # annotations:
  #   kubernetes.io/ingress.class: nginx
  #   # See https://cert-manager.readthedocs.io/en/latest/reference/ingress-shim.html#supported-annotations
  #   kubernetes.io/tls-acme: "true"
  # hosts:
  #   teleport.example.com:
  #   - /
  # # Secrets must be manually created in the namespace
  # tls:
  #  - secretName: teleport-ingress-tls
  #    hosts:
  #    - teleport.example.com

ports:
  proxyweb:
    containerPort: 3080
  authssh:
    containerPort: 3025
  proxykube:
    containerPort: 3026
  proxyssh:
    containerPort: 3023
  nodessh:
    containerPort: 3022
  proxytunnel:
    containerPort: 3024

## Additional container arguments
extraArgs: []

# A map of additional environment variables
extraVars: {}
  # Provide the path to your own CA cert if you would like to use to
  # validate the certificate chain presented by the proxy
  # SSL_CERT_FILE: "/var/lib/ca-certs/ca.pem"

# Add additional volumes and mounts, for example to read other log files on the host
extraVolumes: []
  # - name: ca-certs
  #   configMap:
  #     name: ca-certs

extraVolumeMounts: []
  # - name: ca-certs
  #   mountPath: /var/lib/ca-certs
  #   readOnly: true

# Volume mounts only for the auth service in High Availability deployments
extraAuthVolumes: []
extraAuthVolumeMounts: []

resources: {}
# We usually recommend not to specify default resources and to leave this as a conscious
# choice for the user. This also increases chances charts run on environments with little
# resources, such as Minikube. If you do want to specify resources, uncomment the following
# lines, adjust them as necessary, and remove the curly braces after 'resources:'.
# limits:
#  cpu: 100m
#  memory: 200Mi
# requests:
#  cpu: 100m
#  memory: 100Mi

# Specify resources for the seperate auth service deployment
authresources: {}

rbac:
  # Specifies whether RBAC resources should be created
  create: true

serviceAccount:
  # Specifies whether a ServiceAccount should be created
  create: true
  # The name of the ServiceAccount to use.
  # If not set and create is true, a name is generated using the fullname template
  name:
  annotations: {}

persistence:
  enabled: false
  accessMode: ReadWriteOnce
  ## If defined, storageClass: <storageClass>
  ## If set to "-", storageClass: "", which disables dynamic provisioning
  ## If undefined (the default) or set to null, no storageClass spec is
  ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
  ##   GKE, AWS & OpenStack)
  ##
  # existingClaim:
  # annotations:
  #  "helm.sh/resource-policy": keep
  # storageClass: "-"
  storageSize: 8Gi
  # If PersistentDisk already exists you can create a PV for it by including the 2 following keypairs.
  # pdName: teleport-data-disk
  # fsType: ext4

# set this to false to avoid running into issues for proxies that run in a separate k8s cluster
automountServiceAccountToken: true

# Pod annotations
annotations: {}
## See https://github.com/uswitch/kiam#overview
## To enable AWS API access from teleport, use kube2iam or kiam, annotate the namespace, and then set something like:
# iam.amazonaws.com/role: teleport-dynamodb-and-s3-access

#Replica count is not recommended to increase
replicaCount: 1
strategy: RollingUpdate

## Affinity for pod assignment
## Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
# affinity: {}
#
## For the sake of security, make specific node group(s) dedicated to Teleport
#   nodeAffinity:
#     requiredDuringSchedulingIgnoredDuringExecution:
#       nodeSelectorTerms:
#       - matchExpressions:
#         - key: gravitational.io/dedicated
#           operator: In
#           values:
#           - teleport
#
## For High Availability, distribute teleport pods to nodes as evenly as possible
#   podAntiAffinity:
#     preferredDuringSchedulingIgnoredDuringExecution:
#     - podAffinityTerm:
#         labelSelector:
#           matchExpressions:
#           - key: app
#             operator: In
#             values:
#             - teleport
#         topologyKey: kubernetes.io/hostname

# Tolerations for pod assignment
# Ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
tolerations: []
#
# - key: "dedicated"
#   operator: "Equal"
#   value: "teleport"
#   effect: "NoExecute"
# - key: "dedicated"
#   operator: "Equal"
#   value: "teleport"
#   effect: "NoSchedule"
